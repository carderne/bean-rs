name: pypi

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
    steps:
      - uses: actions/checkout@v4
      - name: set version
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.toml
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.lock
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - name: set version
        shell: bash
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.toml
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.lock
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: set version
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          sed -i '' "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.toml
          sed -i '' "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.lock
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set version
        env:
          RELEASE_TAG: ${{ github.ref }}
        run: |
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.toml
          sed -i "s/0\\.0\\.999/${RELEASE_TAG##*\/v}/" Cargo.lock
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
